{"cells":[{"cell_type":"markdown","source":["# Stock Prediction Model Summary\n","\n","## Disclaimer\n","This analysis is merely reflective of my opinions, founded on data available during the time of creation. Investment ventures inherently entail risks. Prospective investors are urged to seek counsel from a qualified financial advisor prior to making any investment decisions. It is crucial to remember that past performances are not indicative of future results. Investment decisions should be made with professional advice.\n","\n","## Objective\n","The primary goal is to construct a prediction model, leveraging LightGBM, integrated with various indicators, to forecast whether the following period closing price will be higher(Ture indicates higher closing price).\n","\n","## Data\n","The dataset encompasses 3364 US stocks, each with a minimum trading history of three years.\n","- **Duration:** 2013-09-01 to 2023-08-31\n","- **Test Data Range:** 2023-07-01 to 2023-08-31\n","\n","## Parameters\n","The following parameters were utilized in the analysis:\n","- 14-day RSI\n","- Change in RSI compared to the previous RSI\n","- Percentage of close from the 52-week high\n","- Percentage of close from the 52-week low\n","- Whether Close is higher than EMA20\n","- Whether EMA20 is higher than EMA50\n","- Whether EMA50 is higher than EMA200\n","- Whether Volume is higher than MA20\n","- % change in the previous close\n","\n","## Evaluation Results\n","| Metric             | Validation Data | Test Data | Test data(prediciton all True)  | Test data(prediction all False)  | Randomly Distributed |\n","|--------------------|-----------------|-----------|----------|-----------|----------------------|\n","| **Accuracy**       |  53.44%               |   52.02%        |     47.94%     |    52.06%       |       50.05%               |\n","| **AUC Score**      |   0.5482              |   0.5271    |    0.5      |       0.5    |           0.5005           |\n","\n","\n","### Observations on Model Performance\n","While the model displays a lackluster ability to discriminate between classes, it appears to have a slightly superior predictive accuracy compared to random guessing. However, when contrasted against scenarios where all predictions are false, the model's performance doesn't hold up well, indicating significant room for improvement.\n"],"metadata":{"id":"tDkPcxPPaQRk"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"mBaGnn8XDmU1"},"outputs":[],"source":["import pandas as pd\n","import os\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","import lightgbm as lgb"]},{"cell_type":"code","source":["# Read the stock list from the CSV file into a pandas DataFrame with 'Ticker'\n","stock_list_path = 'US_stock_list.csv'\n","stock_list_df = pd.read_csv(stock_list_path)"],"metadata":{"id":"YMrJxcLvMlrw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def calculate_rsi(df, column='Close', period=14):\n","    \"\"\"\n","    Calculate Relative Strength Index (RSI) for a given DataFrame and column.\n","\n","    Parameters\n","    ----------\n","    df : DataFrame\n","        Pandas DataFrame containing price information.\n","    column : str, optional\n","        Name of the column with price data. Default is 'Close'.\n","    period : int, optional\n","        Period over which to calculate RSI. Default is 14.\n","\n","    Returns\n","    -------\n","    Series\n","        A Series object containing the RSI values.\n","    \"\"\"\n","\n","  # Calculate daily price changes\n","  delta = df['Close'].diff(1)\n","\n","  # Separate gains and losses\n","  gain = delta.where(delta > 0, 0)\n","  loss = -delta.where(delta < 0, 0)\n","\n","  # Calculate rolling average of gains and losses\n","  avg_gain = gain.ewm(alpha=1/period, adjust=False).mean()\n","  avg_loss = loss.ewm(alpha=1/period, adjust=False).mean()\n","\n","  # Calculate Relative Strength (RS) and Relative Strength Index (RSI)\n","  rs = avg_gain / avg_loss\n","  rsi = 100 - (100 / (1 + rs))\n","  return rsi\n","\n","def ma(df, periods, ema=True, on='Close'):\n","    \"\"\"\n","    Calculate the Moving Average (MA) or Exponential Moving Average (EMA) for a given DataFrame.\n","\n","    Parameters\n","    ----------\n","    df : DataFrame\n","        DataFrame containing the data.\n","    periods : int\n","        Number of periods to consider for MA or EMA.\n","    ema : bool, optional\n","        If True, EMA is calculated, otherwise, MA is calculated. Default is True.\n","    on : str, optional\n","        Column name on which the moving average is to be calculated. Default is 'Close'.\n","\n","    Returns\n","    -------\n","    Series\n","        A Series containing the calculated MA or EMA values.\n","    \"\"\"\n","  if ema:\n","      return df[on].ewm(span=periods, adjust=False).mean()\n","  return df[on].rolling(window=periods).mean()\n","\n","def calculate_n_period_high_low(df, column='High', periods=252):\n","    \"\"\"\n","    Calculate n-period high and low for a given DataFrame and column.\n","\n","    Parameters\n","    ----------\n","    df : DataFrame\n","        Pandas DataFrame with price information.\n","    column : str, optional\n","        Name of the column with price data. Default is 'High'.\n","    periods : int, optional\n","        The rolling window size for calculating high and low. Default is 252.\n","\n","    Returns\n","    -------\n","    Series\n","        A Series containing the n-periods high if column='High', else n-periods low values.\n","    \"\"\"\n","\n","\n","  if column=='High':\n","    return df[column].rolling(window=periods, min_periods=1).max()\n","  return df[column].rolling(window=periods, min_periods=1).min()\n","\n","def check_if_higher(df, columns):\n","    \"\"\"\n","    Check whether values in the first specified column are greater than values in the second specified column.\n","\n","    Parameters\n","    ----------\n","    df : DataFrame\n","        A Pandas DataFrame containing the data.\n","    columns : list of str\n","        A list containing two column names to compare. The first one is considered to be greater.\n","\n","    Returns\n","    -------\n","    Series\n","        A Boolean Series indicating whether values in the first specified column are greater than the values in the second specified column.\n","\n","    Examples\n","    --------\n","    >>> df = pd.DataFrame({'a': [1, 2, 3], 'b': [3, 2, 1]})\n","    >>> check_if_higher(df, ['a', 'b'])\n","    0    False\n","    1    False\n","    2    True\n","    dtype: bool\n","    \"\"\"\n","    return df[columns].iloc[:, 0] > df[columns].iloc[:, 1]"],"metadata":{"id":"jD0CX-qsMsRa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","def add_indicator(df, start='2013-09-01', to='2023-08-31'):\n","    \"\"\"\n","    Prepare data by adding EMA, MA columns and other indicators to the DataFrame, and then filter it based on the specified date range.\n","\n","    Parameters\n","    ----------\n","    df : DataFrame\n","        The Pandas DataFrame containing the data.\n","    start : str, optional\n","        The start date for the data range. The default is '2013-09-1'.\n","    to : str, optional\n","        The end date for the data range. The default is '2023-08-31'.\n","\n","    Returns\n","    -------\n","    DataFrame\n","        A DataFrame that is filtered by the specified date range and enhanced with EMA, MA, and other indicator columns.\n","\n","    Notes\n","    -----\n","    The function calculates various technical indicators like EMA, MA, RSI, and high-low percentages and adds them as new columns to the DataFrame.\n","    It then filters the DataFrame based on the provided date range.\n","    \"\"\"\n","    df['EMA20'] = ma(df, 20)\n","    df['EMA50'] = ma(df, 50)\n","    df['EMA200'] = ma(df, 200)\n","    df['MA20_Vol'] = ma(df, 20, ema=False, on='Volume')\n","    df['52 weeks high'] = calculate_n_period_high_low(df, column='High')\n","    df['52 weeks low'] = calculate_n_period_high_low(df, column='Low')\n","    df['rsi'] = calculate_rsi(df)\n","    df['change in ris'] = df['rsi'].diff()\n","    df['% close from 52 weeks high'] = (df['52 weeks high'] - df['Close'])/(df['52 weeks high'] - df['52 weeks low'])\n","    df['% close from 52 weeks low'] = (df['Close']-df['52 weeks low'])/(df['52 weeks high'] - df['52 weeks low'])\n","    df['Close > EMA20'] = check_if_higher(df, ['Close', 'EMA20'])\n","    df['EMA20 > EMA50'] = check_if_higher(df, ['EMA20', 'EMA50'])\n","    df['EMA50 > EMA200'] = check_if_higher(df, ['EMA50', 'EMA200'])\n","    df['Vol > MA20'] = check_if_higher(df, ['Volume', 'MA20_Vol'])\n","    df['%Change in previous close'] = df['rsi'].pct_change(1)\n","    df['The next day close is higher']  = df['Close'].shift(-1) > df['Close']\n","    df.dropna(inplace=True)\n","    return df[(df['Date'] >= start) & (df['Date'] <=to)]"],"metadata":{"id":"zSTg7hXuMxHV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Initialize lists to store training and testing data sets.\n","data_train = []\n","data_test = []\n","\n","# Loop through each stock in the stock list DataFrame.\n","for s in range(len(stock_list_df)):\n","    # Fetch the historical price data for the current stock using yfinance.\n","    stock_data = yf.Ticker(stock_list_df.iloc[s]['Ticker'])\n","    price_data = stock_data.history(period='max').reset_index()\n","\n","    # Skip stocks with trading days less than 3 years\n","    if len(price_data) < 756:\n","        continue\n","\n","    # Process the price data by adding indicators\n","    price_data = add_indicator(price_data).reset_index(drop=True)\n","    data_train.append(price_data[price_data['Date'] <= '2023-6-30'])\n","    data_test.append(price_data[price_data['Date'] > '2023-6-30'])\n","    time.sleep(5)\n"],"metadata":{"id":"7UjSSD4cMyGP"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Svy3LNgQQkN8"},"outputs":[],"source":["train_setdf = pd.concat(data_train)\n","train_setdf.reset_index(drop=True, inplace=True)\n","test_setdf = pd.concat(data_test)\n","test_setdf.reset_index(drop=True, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xj-b_B9hRVcf"},"outputs":[],"source":["selected_features = ['rsi', 'change in ris', '% close from 52 weeks high','% close from 52 weeks low', 'Close > EMA20', 'EMA20 > EMA50','EMA50 > EMA200', 'Vol > MA20', '%Change in previous close']\n","target = ['The next day close is higher']\n","cat_features = ['Close > EMA20', 'EMA20 > EMA50','EMA50 > EMA200', 'Vol > MA20']"]},{"cell_type":"code","source":["# Split the training data into training and validation sets to validate the model's performance.\n","X_train, X_val, y_train, y_val = train_test_split(train_setdf[selected_features], train_setdf[target], test_size=0.2, random_state=42)\n","\n","# Define the parameters for the LightGBM model.\n","params = {\n","    'objective': 'binary',  # Binary classification problem.\n","    'metric': 'binary_logloss',  # Use binary log loss as the evaluation metric.\n","    'verbosity': -1,  # Suppress the model's output.\n","    'boosting_type': 'gbdt',  # Use Gradient Boosting Decision Trees.\n","    'learning_rate': 0.081,  # Learning rate for model training.\n","    'num_leaves': 15,  # Maximum number of leaves in one tree.\n","    'min_child_samples': 62,  # Minimum number of samples required in a leaf.\n","    'feature_fraction': 0.84,  # Proportion of features to be randomly selected for each iteration/tree.\n","    'bagging_fraction': 0.92,  # Proportion of data to be used for each iteration/tree.\n","    'bagging_freq': 2,  # Perform bagging at every 2 iterations.\n","    'max_bin': 196,  # Maximum number of bins to bucket the feature values.\n","    'n_estimators': 50000,  # Number of boosting iterations/trees.\n","    'n_jobs': -1  # Use all available threads for training.\n","}\n","\n","# Initialize the LightGBM model with the defined parameters.\n","model = lgb.LGBMClassifier(**params)  # Unpack the parameters.\n","\n","# Define early stopping criteria to avoid overfitting and reduce training time.\n","early_stopping = lgb.early_stopping(stopping_rounds=100, first_metric_only=False)  # Stop if no improvement after 100 rounds.\n","\n","# Train the model with the training data and validate using the validation set.\n","model.fit(\n","    X_train,\n","    y_train,\n","    eval_set=[(X_val, y_val)],\n","    categorical_feature=cat_features,\n","    callbacks=[early_stopping]\n",")"],"metadata":{"id":"FPkL3BXA_PEb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Evaluation"],"metadata":{"id":"8EP0A_OpNQuQ"}},{"cell_type":"markdown","source":["## Evaluation of validation data using confusion matrix, classification report, accuracy and auc score"],"metadata":{"id":"aNkss8t1RFrt"}},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, classification_report\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import roc_curve, auc, roc_auc_score\n","import matplotlib.pyplot as plt"],"metadata":{"id":"86EmScdnNVbL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Predict class labels on validation data\n","val_pred = model.predict(X_val)\n","\n","\n","# Generating the confusion matrix\n","cm = confusion_matrix(y_val, val_pred)\n","print(\"Confusion Matrix:\")\n","print(cm)\n","\n","# Generating the classification report\n","report = classification_report(y_val, val_pred)\n","print(\"Classification Report:\")\n","print(report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"158WFQg7A_3o","executionInfo":{"status":"ok","timestamp":1695690269208,"user_tz":-540,"elapsed":6248,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"9313e3a6-7f33-438d-8df4-5e32eb58634b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n","[[556643 205574]\n"," [470163 218965]]\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","       False       0.54      0.73      0.62    762217\n","        True       0.52      0.32      0.39    689128\n","\n","    accuracy                           0.53   1451345\n","   macro avg       0.53      0.52      0.51   1451345\n","weighted avg       0.53      0.53      0.51   1451345\n","\n"]}]},{"cell_type":"code","source":["accuracy = accuracy_score(y_val, val_pred)\n","print(f\"Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sYu7rzPjE3MN","executionInfo":{"status":"ok","timestamp":1695691321729,"user_tz":-540,"elapsed":4,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"e050776a-c530-473c-a2c3-2132a3096e38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.5344063609961794\n"]}]},{"cell_type":"code","source":["\n","# Assuming model has a method predict_proba\n","probs = model.predict_proba(X_val)[:, 1]\n","\n","# Compute the ROC curve and AUC\n","fpr, tpr, _ = roc_curve(y_val, probs)\n","roc_auc = auc(fpr, tpr)\n","\n","# Optionally, compute the ROC AUC Score\n","roc_auc_score_value = roc_auc_score(y_val, probs)\n","print(f\"ROC AUC Score: {roc_auc_score_value}\")\n","\n","# Plotting the ROC curve\n","plt.figure()\n","plt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic')\n","plt.legend(loc=\"lower right\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"1vyMQa4gDC0r","executionInfo":{"status":"ok","timestamp":1695690868963,"user_tz":-540,"elapsed":4623,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"536e5987-1486-4a76-adf7-0ce27d899568"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ROC AUC Score: 0.5482166662001413\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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7+LikmQ8IiKCRo0aUahQIXbs2EH+/Pk5c+YMWq02RfmvWrWKIUOGcPz4cQCuX79O165diYiI0M9CvG/fPp4/f06nTp0AmDlzJj/99BOLFy+mVKlSHD16lN69e5M3b14aNWqUZDt//PEHNWrUMIpFR0fj5eXFp59+ipOTE7t378bX15cSJUpQq1atl+b47NkzmjZtysCBA5k3bx5RUVF8+umndOvWjd9//x2AyMhIRo0aReXKlYmIiGDixIl06tSJc+fOvXTahhkzZjBjxoxXvl5XrlyhSJEiieKxsbGcPn2aceMM07lYWlrSvHlz/Pz8XnnOiIgIihYtilarpXr16syYMYMKFSoY7XP48GHc3d1xdXWladOmTJs2jTx58hjtU6tWLf744w8GDBjwyvbSihRCbyouEvb4wvVthlj5PkTWX8zo4QdZsuS0Ppw/fy5WrepIy5Yl0iFRIYTJRAZDxN30zuK1du3aRa5cuYiPjycmJgZLS0u++86wyHNAQADOzs4UKJB4qg5bW1uKFy9OQIBurOM///xD8eLFsbFJ2c0c69at49GjR/z111/kzp0bgJIlS6b4uZQqVYqvvvpKv12iRAly5szJtm3b8PX11bfVvn17HB0diYmJYcaMGRw4cIC6desCULx4cY4dO8aSJUteWgj9+++/iQqhQoUKGRWLw4cPZ9++fWzcuNGoEPpvjtOmTaNatWpGRcvy5cvx8PAgICCA0qVL06VLF6O2li9fTt68ebly5QoVK1ZMMsfBgwfTrVu3V75eBQsmvT5lSEgIGo2GfPmM/xjPly8f165de+n5ypQpw/Lly6lcuTKhoaHMmTMHb29vLl++TOHChQHdZbHOnTtTrFgxbty4wfjx43nrrbfw8/MzmhyxYMGCnD179pX5pyUphN5E5APY0goendNtW1hB8+85HdeWnjV+JCDgsX7XDh3K8MMP7XFzk9lphcj0cubPFO02adKERYsWERkZybx587C2tk70xZtcKpXrc587d45q1arpi6DU8vLyMtq2tramW7durF27Fl9fXyIjI9m+fTvr168HdD1Gz58/p0WLFkbHxcbGUq1atZe2ExUVlWgQsEajYcaMGWzcuJG7d+8SGxtLTExMotnG/5vj+fPnOXToUJLrZt24cYPSpUvzzz//MHHiRE6ePElISIi+p+zWrVsvLYRy5879xq9n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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Evaluation of test data using confusion matrix, classification report, accuracy, and AUC score."],"metadata":{"id":"ynySvAynSNYw"}},{"cell_type":"code","source":["# Predict class labels on validation data\n","test_pred = model.predict(test_setdf[selected_features])\n","\n","# Generating the confusion matrix\n","cm = confusion_matrix(test_setdf[target], test_pred)\n","print(\"Confusion Matrix:\")\n","print(cm)\n","\n","# Generating the classification report\n","report = classification_report(test_setdf[target], test_pred)\n","print(\"Classification Report:\")\n","print(report)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sKE_hMV8BIUf","executionInfo":{"status":"ok","timestamp":1695690441697,"user_tz":-540,"elapsed":624,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"ae848442-e71c-466e-c107-d7ed25331084"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n","[[57466 19593]\n"," [51425 19530]]\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","       False       0.53      0.75      0.62     77059\n","        True       0.50      0.28      0.35     70955\n","\n","    accuracy                           0.52    148014\n","   macro avg       0.51      0.51      0.49    148014\n","weighted avg       0.51      0.52      0.49    148014\n","\n"]}]},{"cell_type":"code","source":["accuracy = accuracy_score(test_setdf[target], test_pred)\n","print(f\"Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBxqRpdyFHfT","executionInfo":{"status":"ok","timestamp":1695691368081,"user_tz":-540,"elapsed":263,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"bd033ec8-30eb-4070-d99d-44a5e30a0a88"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.5201940356993258\n"]}]},{"cell_type":"code","source":["\n","# Assuming model has a method predict_proba\n","probs = model.predict_proba(test_setdf[selected_features])[:, 1]\n","\n","# Compute the ROC curve and AUC\n","fpr, tpr, _ = roc_curve(test_setdf[target], probs)\n","roc_auc = auc(fpr, tpr)\n","\n","# Optionally, compute the ROC AUC Score\n","roc_auc_score_value = roc_auc_score(test_setdf[target], probs)\n","print(f\"ROC AUC Score: {roc_auc_score_value}\")\n","\n","# Plotting the ROC curve\n","plt.figure()\n","plt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic')\n","plt.legend(loc=\"lower right\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"NxfDaJCuCEK-","executionInfo":{"status":"ok","timestamp":1695690709954,"user_tz":-540,"elapsed":1234,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"e43f633f-963a-46a6-dabe-59eaac664937"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ROC AUC Score: 0.5271236690098735\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Evaluation of all positive instances using accuracy, and AUC score."],"metadata":{"id":"yifOJCPSSlDT"}},{"cell_type":"code","source":["\n","# Compute the ROC curve and AUC\n","fpr, tpr, _ = roc_curve(test_setdf[target], np.ones(len(test_setdf)))\n","roc_auc = auc(fpr, tpr)\n","\n","# Optionally, compute the ROC AUC Score\n","roc_auc_score_value = roc_auc_score(test_setdf[target], np.ones(len(test_setdf)))\n","print(\"ROC AUC Score:\", roc_auc_score_value)\n","\n","accuracy = accuracy_score(test_setdf[target], np.ones(len(test_setdf)))\n","print(f\"Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9rx7MydQD7vN","executionInfo":{"status":"ok","timestamp":1695691396125,"user_tz":-540,"elapsed":3,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"b0715c50-a6c3-42cf-f88b-29a4c2df38c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ROC AUC Score: 0.5\n","Accuracy: 0.4793803288878079\n"]}]},{"cell_type":"markdown","source":["## Evaluation of all negative instances using accuracy, and AUC score."],"metadata":{"id":"Zp2GXelETeW6"}},{"cell_type":"code","source":["# Compute the ROC curve and AUC\n","fpr, tpr, _ = roc_curve(test_setdf[target], np.zeros(len(test_setdf)))\n","roc_auc = auc(fpr, tpr)\n","\n","# Optionally, compute the ROC AUC Score\n","roc_auc_score_value = roc_auc_score(test_setdf[target], np.zeros(len(test_setdf)))\n","print(f\"ROC AUC Score: {roc_auc_score_value}\")\n","\n","accuracy = accuracy_score(test_setdf[target], np.zeros(len(test_setdf)))\n","print(f\"Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jpT5h_ytFWOc","executionInfo":{"status":"ok","timestamp":1695691437027,"user_tz":-540,"elapsed":324,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"55f0dc1f-1b33-4d7c-a3e4-d64cd26710cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ROC AUC Score: 0.5\n","Accuracy: 0.5206196711121921\n"]}]},{"cell_type":"markdown","source":["## Evaluation of randomly distributed data using accuracy, and AUC score."],"metadata":{"id":"RY0vNdcFTq3f"}},{"cell_type":"code","source":["import  random"],"metadata":{"id":"nx-ujAJoIQhd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Compute the ROC curve and AUC\n","roc_scores = []\n","accuracy_scores = []\n","for i in range(10):\n","  distribution = random.choices([0, 1], weights=[50, 50], k=len(test_setdf))\n","  fpr, tpr, _ = roc_curve(test_setdf[target], distribution)\n","  roc_auc = auc(fpr, tpr)\n","\n","  # Optionally, compute the ROC AUC Score\n","  roc_scores.append(roc_auc_score(test_setdf[target], distribution))\n","  accuracy_scores.append(accuracy_score(test_setdf[target], distribution))\n","print(f\"Mean ROC AUC Score: {np.mean(roc_scores)}\")\n","print(f\"Mean Accuracy: {np.mean(accuracy_scores)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GaRg5dHbI96l","executionInfo":{"status":"ok","timestamp":1695693076383,"user_tz":-540,"elapsed":1628,"user":{"displayName":"Ka Ho Chan","userId":"10073701576652980707"}},"outputId":"1afd00ba-a7c6-477e-8936-f31ca9c2d51d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean ROC AUC Score: 0.5004928291659311\n","Mean Accuracy: 0.5005033307660087\n"]}]}],"metadata":{"accelerator":"TPU","colab":{"machine_shape":"hm","provenance":[{"file_id":"14pIJlYgN1_ArnTOMXfOI2ubnJd6pnKzM","timestamp":1695693117402}],"mount_file_id":"14pIJlYgN1_ArnTOMXfOI2ubnJd6pnKzM","authorship_tag":"ABX9TyM80gdvWzIi0kyZ/qno9BkZ"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}